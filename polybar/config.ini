;==========================================================
;
;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗
;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗
;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝
;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗
;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║
;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
;
;                   created by hmathsan
;
;==========================================================

; including separate files

include-file = ~/.config/polybar/configs/colors.ini
include-file = ~/.config/polybar/configs/modules.ini

[global/wm]
margin-top = 10
margin-bottom = 10

[bar/main]
height = 25

offset-y = 0

background = ${color.background}
foreground = ${color.foreground}

radius-top = 0
radius-bottom = 10.0

font-0 = "SF Mono:style=Regular:size=10;1"
font-1 = "Font Awesome 5 Free Regular:style=Regular:pixelsize=12;1"
font-2 = "Font Awesome 5 Free Solid:style=Solid:pixelsize=12;1"
font-3 = "Font Awesome 5 Brands:pixelsize=12;1"
font-4 = "font\-logos:style=logos:pixelsize=12;0"

; Value to be used to set the WM_NAME atom
; If the value is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
wm-name = 

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
locale = 

[bar/wm]
inherit = bar/main
width = 35%

foreground = ${color.foreground}

offset-x = 10

modules-left = arch-icon workspaces
modules-right = polywins

padding-left = 
padding-right = 

line-size = 2

[bar/music]
inherit = bar/main
enable-ipc = true
width = 28%

foreground = ${colors.color2}
offset-x = 55.5%

; Spotify (script at github.com/dietervanhoof/polybar-spotify-controls)
;modules-left = previous playpause next spotify
; Mpd
modules-left = mpd

[bar/tray]
inherit = bar/main
width = 14%

padding-right = 0
offset-x = 84%

;tray-position = right

tray-position = right
tray-detached = true
tray-offset-x = -10


override-redirect = true
modules-left = pulseaudio time
;; Application Settings

[bar/hw]
inherit = bar/main
width = 28.5%

offset-x = 53%
padding-left = 2
padding-right = 2

modules-left = cpu
modules-right = memory

# [settings]
# ; The throttle settings lets the eventloop swallow up til X events
# ; if they happen within Y millisecond after first event was received.
# ; This is done to prevent flood of update event.
# ;
# ; For example if 5 modules emit an update event at the same time, we really
# ; just care about the last one. But if we wait too long for events to swallow
# ; the bar would appear sluggish so we continue if timeout
# ; expires or limit is reached.
# throttle-output = 5
# throttle-output-for = 10

# ; Time in milliseconds that the input handler will wait between processing events
# ;throttle-input-for = 30

# ; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events
# screenchange-reload = false

# ; Compositing operators
# ; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
# compositing-background = source
# compositing-foreground = over
# compositing-overline = over
# compositing-underline = over
# compositing-border = over

# ; Define fallback values used by all module formats
# ;format-foreground = 
# ;format-background = 
# ;format-underline =
# ;format-overline =
# ;format-spacing =
# ;format-padding =
# ;format-margin =
# ;format-offset =

# ; Enables pseudo-transparency for the bar
# ; If set to true the bar can be transparent without a compositor.
# pseudo-transparency = false
